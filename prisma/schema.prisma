// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ElectionStatus {
  PENDING
  OPEN
  CALCULATING
  COMPLETED
}

model Election {
  id          String      @id @default(uuid()) @db.Uuid
  name        String
  description String
  start_date  DateTime    @db.Timestamp(6)
  end_date    DateTime    @db.Timestamp(6)
  status      ElectionStatus @default(PENDING)
  created_at  DateTime    @default(now()) @db.Timestamp(6)
  updated_at  DateTime    @updatedAt @db.Timestamp(6)
  is_active  Boolean     @default(true)

  candidates  Candidate[]
}

model Candidate {
  id          String      @id @default(uuid()) @db.Uuid
  election_id String      @db.Uuid
  name        String
  party       String
  role        String      @db.VarChar(50)
  image_url   String
  created_at  DateTime    @default(now()) @db.Timestamp(6)
  updated_at  DateTime    @updatedAt @db.Timestamp(6)
  is_active   Boolean     @default(true)

  election    Election    @relation(fields: [election_id], references: [id], onDelete: Cascade)

  @@index([election_id])
}

